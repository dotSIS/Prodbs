{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Transition as _Transition, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Products\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"box\"\n};\nconst _hoisted_3 = {\n  class: \"user-options\"\n};\nconst _hoisted_4 = {\n  class: \"container\"\n};\nconst _hoisted_5 = {\n  class: \"bundle\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"generated\"\n};\nconst _hoisted_7 = {\n  class: \"scroll-bundle\"\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"generated-else\"\n}, \"Loading product details...\", -1 /* HOISTED */);\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"divider\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"suggestions1\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Reviews\", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  class: \"suggested\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: {\n      name: 'Products'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"View Products\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: {\n      name: 'GenerateBundle'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Generate Bundle\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: {\n      name: 'ViewBundles'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"View Bundles\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: {\n      name: 'ViewAnalytics'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"View Analytics\")]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_router_view), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_Transition, null, {\n    default: _withCtx(() => [$data.product ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"h5\", null, _toDisplayString($data.product.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, _toDisplayString($data.product.spec), 1 /* TEXT */), _createElementVNode(\"h5\", null, _toDisplayString(\"Price: ₱\" + $data.product.price + \".0\"), 1 /* TEXT */)]), _createCommentVNode(\" <router-link :to=\\\"{}\\\" @click=\\\"getReview(allSentiments)\\\">\\n                            <h5>All {{ allSentiments.length }}</h5>\\n                        </router-link>\\n                        <router-link :to=\\\"{}\\\" @click=\\\"getReview(positiveSentiments)\\\">\\n                            <h5>Positive {{ positiveSentiments.length }}</h5>\\n                        </router-link>\\n                        <router-link :to=\\\"{}\\\" @click=\\\"getReview(negativeSentiments)\\\">\\n                            <h5>Negative {{ negativeSentiments.length }}</h5>\\n                        </router-link>\\n                        <router-link :to=\\\"{}\\\" @click=\\\"getReview(neutralSentiments)\\\">\\n                            <h5>Neutral {{ neutralSentiments.length }}</h5>\\n                        </router-link> \"), _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => $options.getReview($data.allSentiments))\n    }, \"All \" + _toDisplayString($data.allSentiments.length), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = $event => $options.getReview($data.positiveSentiments))\n    }, \"Positive \" + _toDisplayString($data.positiveSentiments.length), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = $event => $options.getReview($data.negativeSentiments))\n    }, \"Negative \" + _toDisplayString($data.negativeSentiments.length), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = $event => $options.getReview($data.neutralSentiments))\n    }, \"Neutral \" + _toDisplayString($data.neutralSentiments.length), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_10))]),\n    _: 1 /* STABLE */\n  }), _hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createVNode(_Transition, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.reviews, review => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: review.id,\n        class: \"items\"\n      }, [_createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString(review['customerName']), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(review['textContent']), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(review['reviewDate']), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  })])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAiB,YAAb,UAAQ;;EACPC,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAc;;EAOpBA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAQ;;;EAESA,KAAK,EAAC;;;EAEjBA,KAAK,EAAC;AAAe;;;;gCAsB1BD,oBAAwD;EAArDC,KAAK,EAAC;AAAgB,GAAC,4BAA0B;qBAApDC,UAAwD;iCAGhEF,oBAA2B;EAAtBC,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAc;iCACrBD,oBAAgB,YAAZ,SAAO;;EAEFC,KAAK,EAAC;AAAW;;;;6DA3C1CE,UAAiB,EACjBH,oBAuDM,OAvDNI,UAuDM,GAtDFJ,oBAKM,OALNK,UAKM,GAJFC,aAAmEC;IAArDC,EAAE,EAAE;MAAAC;IAAA;EAAoB;sBAAE,MAAa,kBAAb,eAAa;;MACrDH,aAA2EC;IAA7DC,EAAE,EAAE;MAAAC;IAAA;EAA0B;sBAAE,MAAe,kBAAf,iBAAe;;MAC7DH,aAAqEC;IAAvDC,EAAE,EAAE;MAAAC;IAAA;EAAuB;sBAAE,MAAY,kBAAZ,cAAY;;MACvDH,aAAyEC;IAA3DC,EAAE,EAAE;MAAAC;IAAA;EAAyB;sBAAE,MAAc,kBAAd,gBAAc;;QAE/DH,aAAcI,yBACdV,oBA8CM,OA9CNW,UA8CM,GA7CFX,oBA4CM,OA5CNY,UA4CM,GA3CFN,aA2BaO;sBA1BT,MAsBM,CAtBKC,aAAO,kBAAlBC,oBAsBM,OAtBNC,UAsBM,GArBFhB,oBAA2B,6BAApBc,aAAO,CAACL,IAAI,kBACnBT,oBAGM,OAHNiB,UAGM,GAFFjB,oBAAyB,4BAAnBc,aAAO,CAACI,IAAI,kBAClBlB,oBAA8C,0CAA3Bc,aAAO,CAACK,KAAK,2BAEpCC,qzBAWkB,EAClBpB,oBAAiF;MAAxEqB,OAAK,sCAAEC,kBAAS,CAACR,mBAAa;OAAG,MAAI,oBAAGA,mBAAa,CAACS,MAAM,kBACrEvB,oBAAgG;MAAvFqB,OAAK,sCAAEC,kBAAS,CAACR,wBAAkB;OAAG,WAAS,oBAAGA,wBAAkB,CAACS,MAAM,kBACpFvB,oBAAgG;MAAvFqB,OAAK,sCAAEC,kBAAS,CAACR,wBAAkB;OAAG,WAAS,oBAAGA,wBAAkB,CAACS,MAAM,kBACpFvB,oBAA6F;MAApFqB,OAAK,sCAAEC,kBAAS,CAACR,uBAAiB;OAAG,UAAQ,oBAAGA,uBAAiB,CAACS,MAAM,qCAErFR,oBAEM;;MAEVS,WAA2B,EAC3BxB,oBAaM,OAbNyB,WAaM,GAZFC,WAAgB,EAChBpB,aAUaO;sBATT,MAQM,CARNb,oBAQM,OARN2B,WAQM,sBAPFZ,oBAMMa,6BANgBd,aAAO,EAAjBe,MAAM;2BAAlBd,oBAMM;QAN0Be,GAAG,EAAED,MAAM,CAACE,EAAE;QAAE9B,KAAK,EAAC;UAClDD,oBAIM,cAHFA,oBAAqC,6BAA9B6B,MAAM,kCACb7B,oBAAkC,4BAA5B6B,MAAM,iCACZ7B,oBAAiC,4BAA3B6B,MAAM","names":["_createElementVNode","class","_hoisted_9","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","name","_component_router_view","_hoisted_4","_hoisted_5","_Transition","$data","_createElementBlock","_hoisted_6","_hoisted_7","spec","price","_createCommentVNode","onClick","$options","length","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","review","key","id"],"sourceRoot":"","sources":["/home/zhy7ne/Projects/Vue_Projects/Prodbs/frontend/src/views/authenticated/ProductDetailsView.vue"],"sourcesContent":["<template>\n    <h1>Products</h1>\n    <div class=\"box\">\n        <div class=\"user-options\">\n            <router-link :to=\"{ name: 'Products' }\">View Products</router-link>\n            <router-link :to=\"{ name: 'GenerateBundle' }\">Generate Bundle</router-link>\n            <router-link :to=\"{ name: 'ViewBundles' }\">View Bundles</router-link>\n            <router-link :to=\"{ name: 'ViewAnalytics' }\">View Analytics</router-link>\n        </div>\n        <router-view/>\n        <div class=\"container\">\n            <div class=\"bundle\">\n                <Transition>\n                    <div v-if=\"product\" class=\"generated\">\n                        <h5>{{ product.name }}</h5>\n                        <div class=\"scroll-bundle\">\n                            <p>{{ product.spec }}</p>\n                            <h5>{{\"Price: ₱\" + product.price + \".0\"}}</h5>\n                        </div>\n                        <!-- <router-link :to=\"{}\" @click=\"getReview(allSentiments)\">\n                            <h5>All {{ allSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(positiveSentiments)\">\n                            <h5>Positive {{ positiveSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(negativeSentiments)\">\n                            <h5>Negative {{ negativeSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(neutralSentiments)\">\n                            <h5>Neutral {{ neutralSentiments.length }}</h5>\n                        </router-link> -->\n                        <button @click=\"getReview(allSentiments)\">All {{ allSentiments.length }}</button>\n                        <button @click=\"getReview(positiveSentiments)\">Positive {{ positiveSentiments.length }}</button>\n                        <button @click=\"getReview(negativeSentiments)\">Negative {{ negativeSentiments.length }}</button>\n                        <button @click=\"getReview(neutralSentiments)\">Neutral {{ neutralSentiments.length }}</button>\n                    </div>\n                    <div v-else>\n                        <p class=\"generated-else\">Loading product details...</p>\n                    </div>\n                </Transition>\n                <div class=\"divider\"></div>\n                <div class=\"suggestions1\">\n                    <h5>Reviews</h5>\n                    <Transition>\n                        <div class=\"suggested\">\n                            <div v-for=\"review in reviews\" :key=\"review.id\" class=\"items\">\n                                <div>\n                                    <h4>{{ review['customerName'] }}</h4>\n                                    <p>{{ review['textContent'] }}</p>\n                                    <p>{{ review['reviewDate'] }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </Transition>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ProductDetails',\n    props: ['id'],\n    data() {\n        return {\n            reviews: [],\n            product: [],\n            allSentiments: [],\n            positiveSentiments: [],\n            negativeSentiments: [],\n            neutralSentiments: []\n        }\n    },\n    mounted() {\n        fetch('http://localhost:8000/api/products/' + this.id + '/')\n            .then(res => res.json())\n            .then(data => this.product = data)\n            .catch(err => console.log(err.message))\n\n        fetch('http://localhost:8000/api/analizeproductreviews/?product=' + this.id)\n            .then(res => res.json())\n            .then(data => {\n                data.forEach(element => {\n                    this.allSentiments.unshift(element)\n                    switch (element['overallSentiment']) {\n                        case \"Positive\":\n                            this.positiveSentiments.unshift(element)\n                            break;\n                        case \"Negative\":\n                            this.negativeSentiments.unshift(element)\n                            break;\n                        case \"Neutral\":\n                            this.neutralSentiments.unshift(element)\n                            break;\n                        default:\n                            break;\n                    }\n                    \n                });\n               \n            })\n            .catch(err => console.log(err.message))\n    },\n    methods: {\n        getReview(sentiment) {\n            this.reviews = []\n            for(var value in sentiment){\n                fetch('http://localhost:8000/api/reviews/' + sentiment[value]['reviewID']+'/')\n                .then(res => res.json())\n                .then(data => {\n                    this.reviews.unshift(data)\n                })\n                .catch(err => console.log(err.message))\n            }\n        }\n    }\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}