{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      products: [],\n      product: [],\n      bundles: [],\n      bundle: [],\n      tempBundle: [],\n      item: '',\n      selectedProductID: ''\n    };\n  },\n  mounted() {\n    fetch('http://localhost:8000/api/products/').then(res => res.json()).then(data => {\n      this.products = data;\n    }).catch(err => console.log(err.message));\n  },\n  methods: {\n    generateBundle(productID) {\n      this.selectedProductID = productID;\n      this.bundle = [];\n      fetch('http://localhost:8000/api/generatebundle/?product=' + productID).then(res => res.json()).then(bundle_data => {\n        this.bundles = [];\n        bundle_data['consequents'].forEach(element => {\n          fetch(\"http://localhost:8000/api/products/\" + element + '/').then(res => res.json()).then(prodRe => {\n            this.bundles.unshift(prodRe);\n          });\n        });\n      }).catch(err => console.log(err.message));\n    },\n    addToBundle(item) {\n      if (!this.bundle.includes(item)) {\n        this.bundle.push(item);\n      } else {\n        this.tempBundle = [];\n        this.bundle.forEach(bb => {\n          if (item.id != bb.id) this.tempBundle.unshift(bb);\n        });\n        this.bundle = this.tempBundle;\n      }\n    },\n    saveBundle() {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'sellerID': \"3324\"\n        })\n      };\n      fetch('http://localhost:8000/api/bundleproducts/', requestOptions).then(resj => resj.json()).then(res => {\n        var id = res.id;\n        let productBundle = [];\n        // seletcedProductID\n        const data = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            'bundleProductID': id,\n            'productID': this.selectedProductID\n          })\n        };\n        fetch('http://localhost:8000/api/productbundle/', data).then(r => {});\n        this.bundle.forEach(bun => {\n          const data = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              'bundleProductID': id,\n              'productID': bun.id\n            })\n          };\n          fetch('http://localhost:8000/api/productbundle/', data).then(r => {\n            this.bundles = [], this.bundle = [];\n          });\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","products","product","bundles","bundle","tempBundle","item","selectedProductID","mounted","fetch","then","res","json","catch","err","console","log","message","methods","generateBundle","productID","bundle_data","forEach","element","prodRe","unshift","addToBundle","includes","push","bb","id","saveBundle","requestOptions","method","headers","body","JSON","stringify","resj","productBundle","r","bun"],"sourceRoot":"","sources":["/home/zhy7ne/Projects/Vue_Projects/Prodbs/frontend/src/views/authenticated/GenerateBundleView.vue"],"sourcesContent":["<template>\n    <h1>Generate Bundle</h1>\n    <div class=\"box\">\n        <div class=\"user-options\">\n            <router-link :to=\"{ name: 'Products' }\">View Products</router-link>\n            <router-link :to=\"{ name: 'GenerateBundle' }\">Generate Bundle</router-link>\n            <router-link :to=\"{ name: 'ViewBundles' }\">View Bundles</router-link>\n            <router-link :to=\"{ name: 'ViewAnalytics' }\">View Analytics</router-link>\n        </div>\n        <router-view/>\n        <div class=\"container\">\n            <div class=\"bundle\">\n                <Transition>\n                    <div v-if=\"products.length\" class=\"generated\">\n                        <h5>Products</h5>\n                        <div class=\"scroll-bundle\">\n                            <div v-for=\"product in products\" :key=\"product.id\" class=\"generate\">\n                                <router-link :to=\"{}\" @click=\"generateBundle(product.id)\">\n                                    <h2>\n                                        {{ product.name }}\n                                    </h2>\n                                </router-link>\n                            </div>\n                        </div>\n                    </div>\n                    <div v-else>\n                        <p class=\"generated-else\">Loading products...</p>\n                    </div>\n                </Transition>\n                <div class=\"divider\"></div>\n                <div class=\"suggestions\">\n                    <h5>Suggested Bundle Items</h5>\n                    <Transition>\n                        <div v-if=\"bundles.length\" class=\"suggested\">\n                            <div v-for=\"bundle in bundles\" :key=\"bundles.id\" class=\"items\">\n                                <router-link :to=\"{}\" @click.native=\"addToBundle(bundle)\">\n                                    <h2>{{ bundle.name }}</h2>\n                                </router-link>\n                            </div>\n                            <button class=\"submit\" @click=\"saveBundle()\">Save</button>\n                            Selected:\n                            <div class=\"item-div\">\n                                <div v-for=\"item in bundle\" :key=\"item\" class=\"selected-items\">\n                                    <span class=\"selected-span\">\n                                        {{ item.name }}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <div v-else>\n                            <p class=\"suggested-else\">Select product...</p>  \n                        </div>\n                    </Transition>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n  \n<script>\nexport default {\n    data() {\n        return {\n            products: [],\n            product: [],\n            bundles: [],\n            bundle: [],\n            tempBundle: [],\n            item: '',\n            selectedProductID: ''\n        }\n    },\n    mounted() {\n        fetch('http://localhost:8000/api/products/')\n            .then(res => res.json())\n            .then((data) => {\n                this.products = data;\n            })\n            .catch(err => console.log(err.message))\n    },\n    methods: {\n        generateBundle(productID) {\n           this.selectedProductID = productID\n            this.bundle = []\n            fetch('http://localhost:8000/api/generatebundle/?product=' + productID)\n                .then(res => res.json())\n                .then(bundle_data => {\n                    this.bundles = [];\n                    bundle_data['consequents'].forEach(element => {\n                        fetch(\"http://localhost:8000/api/products/\"+element+'/')\n                        .then(res => res.json())\n                        .then(prodRe => {\n                            this.bundles.unshift(prodRe);\n                        });\n                    })\n                })\n                .catch(err => console.log(err.message))\n        },\n        addToBundle(item) {\n            if (!this.bundle.includes(item)) {\n                this.bundle.push(item)\n            }\n            else {\n                this.tempBundle = []\n                this.bundle.forEach((bb) => {\n                    if(item.id != bb.id) this.tempBundle.unshift(bb)\n                })\n                this.bundle =  this.tempBundle;\n            }\n        },\n        saveBundle() {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ 'sellerID': \"3324\",})\n            };\n            fetch('http://localhost:8000/api/bundleproducts/', requestOptions)\n            .then(resj => resj.json())\n            .then((res) => {\n                    var id = res.id\n                    let productBundle =[]\n                    // seletcedProductID\n                    const data = {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify(\n                            {\n                                'bundleProductID':id,\n                                'productID':this.selectedProductID\n                            }\n                        )\n                    };\n                    fetch('http://localhost:8000/api/productbundle/', data).then((r)=>{\n                        \n                    })\n                    this.bundle.forEach(\n                        (bun) => {\n                            const data = {\n                                method: \"POST\",\n                                headers: { \"Content-Type\": \"application/json\" },\n                                body: JSON.stringify(\n                                    {\n                                        'bundleProductID':id,\n                                        'productID':bun.id\n                                    }\n                                )\n                            };\n                            fetch('http://localhost:8000/api/productbundle/', data).then((r)=>{\n                                this.bundles = [],\n                                this.bundle = []\n                            })\n                        }\n                    )\n                }\n                    \n            )\n        }\n    }\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}