{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nexport default {\n  name: 'ProductDetails',\n  props: ['id'],\n  data() {\n    return {\n      reviews: [],\n      product: [],\n      allSentiments: [],\n      positiveSentiments: [],\n      negativeSentiments: [],\n      neutralSentiments: []\n    };\n  },\n  mounted() {\n    fetch('http://localhost:8000/api/products/' + this.id + '/').then(res => res.json()).then(data => this.product = data).catch(err => console.log(err.message));\n    fetch('http://localhost:8000/api/analizeproductreviews/?product=' + this.id).then(res => res.json()).then(data => {\n      data.forEach(element => {\n        this.allSentiments.unshift(element);\n        switch (element['overallSentiment']) {\n          case \"Positive\":\n            this.positiveSentiments.unshift(element);\n            break;\n          case \"Negative\":\n            this.negativeSentiments.unshift(element);\n            break;\n          case \"Neutral\":\n            this.neutralSentiments.unshift(element);\n            break;\n          default:\n            break;\n        }\n      });\n    }).catch(err => console.log(err.message));\n  },\n  methods: {\n    getReview(sentiment) {\n      this.reviews = [];\n      for (var value in sentiment) {\n        fetch('http://localhost:8000/api/reviews/' + sentiment[value]['reviewID'] + '/').then(res => res.json()).then(data => {\n          this.reviews.unshift(data);\n        }).catch(err => console.log(err.message));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA6DA,eAAe;EACXA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE,EAAE;MACtBC,kBAAkB,EAAE,EAAE;MACtBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACDC,OAAO,GAAG;IACNC,KAAK,CAAC,qCAAoC,GAAI,IAAI,CAACC,EAAC,GAAI,GAAG,EACtDC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,EAAE,EACtBF,IAAI,CAACV,IAAG,IAAK,IAAI,CAACE,OAAM,GAAIF,IAAI,EAChCa,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;IAE1CT,KAAK,CAAC,2DAA0D,GAAI,IAAI,CAACC,EAAE,EACtEC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,EAAE,EACtBF,IAAI,CAACV,IAAG,IAAK;MACVA,IAAI,CAACkB,OAAO,CAACC,OAAM,IAAK;QACpB,IAAI,CAAChB,aAAa,CAACiB,OAAO,CAACD,OAAO;QAClC,QAAQA,OAAO,CAAC,kBAAkB,CAAC;UAC/B,KAAK,UAAU;YACX,IAAI,CAACf,kBAAkB,CAACgB,OAAO,CAACD,OAAO;YACvC;UACJ,KAAK,UAAU;YACX,IAAI,CAACd,kBAAkB,CAACe,OAAO,CAACD,OAAO;YACvC;UACJ,KAAK,SAAS;YACV,IAAI,CAACb,iBAAiB,CAACc,OAAO,CAACD,OAAO;YACtC;UACJ;YACI;QAAK;MAGjB,CAAC,CAAC;IAEN,CAAC,EACAN,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC9C,CAAC;EACDI,OAAO,EAAE;IACLC,SAAS,CAACC,SAAS,EAAE;MACjB,IAAI,CAACtB,OAAM,GAAI,EAAC;MAChB,KAAI,IAAIuB,KAAI,IAAKD,SAAS,EAAC;QACvBf,KAAK,CAAC,oCAAmC,GAAIe,SAAS,CAACC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAC,GAAG,EAC5Ed,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,EAAE,EACtBF,IAAI,CAACV,IAAG,IAAK;UACV,IAAI,CAACC,OAAO,CAACmB,OAAO,CAACpB,IAAI;QAC7B,CAAC,EACAa,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC1C;IACJ;EACJ;AACJ","names":["name","props","data","reviews","product","allSentiments","positiveSentiments","negativeSentiments","neutralSentiments","mounted","fetch","id","then","res","json","catch","err","console","log","message","forEach","element","unshift","methods","getReview","sentiment","value"],"sourceRoot":"","sources":["/home/zhy7ne/Projects/Vue_Projects/Prodbs/frontend/src/views/authenticated/ProductDetailsView.vue"],"sourcesContent":["<template>\n    <h1>Products</h1>\n    <div class=\"box\">\n        <div class=\"user-options\">\n            <router-link :to=\"{ name: 'Products' }\">View Products</router-link>\n            <router-link :to=\"{ name: 'GenerateBundle' }\">Generate Bundle</router-link>\n            <router-link :to=\"{ name: 'ViewBundles' }\">View Bundles</router-link>\n            <router-link :to=\"{ name: 'ViewAnalytics' }\">View Analytics</router-link>\n        </div>\n        <router-view/>\n        <div class=\"container\">\n            <div class=\"bundle\">\n                <Transition>\n                    <div v-if=\"product\" class=\"generated\">\n                        <h5>{{ product.name }}</h5>\n                        <div class=\"scroll-bundle\">\n                            <p>{{ product.spec }}</p>\n                            <h5>{{\"Price: â‚±\" + product.price + \".0\"}}</h5>\n                        </div>\n                        <!-- <router-link :to=\"{}\" @click=\"getReview(allSentiments)\">\n                            <h5>All {{ allSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(positiveSentiments)\">\n                            <h5>Positive {{ positiveSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(negativeSentiments)\">\n                            <h5>Negative {{ negativeSentiments.length }}</h5>\n                        </router-link>\n                        <router-link :to=\"{}\" @click=\"getReview(neutralSentiments)\">\n                            <h5>Neutral {{ neutralSentiments.length }}</h5>\n                        </router-link> -->\n                        <button @click=\"getReview(allSentiments)\">All {{ allSentiments.length }}</button>\n                        <button @click=\"getReview(positiveSentiments)\">Positive {{ positiveSentiments.length }}</button>\n                        <button @click=\"getReview(negativeSentiments)\">Negative {{ negativeSentiments.length }}</button>\n                        <button @click=\"getReview(neutralSentiments)\">Neutral {{ neutralSentiments.length }}</button>\n                    </div>\n                    <div v-else>\n                        <p class=\"generated-else\">Loading product details...</p>\n                    </div>\n                </Transition>\n                <div class=\"divider\"></div>\n                <div class=\"suggestions1\">\n                    <h5>Reviews</h5>\n                    <Transition>\n                        <div class=\"suggested\">\n                            <div v-for=\"review in reviews\" :key=\"review.id\" class=\"items\">\n                                <div>\n                                    <h4>{{ review['customerName'] }}</h4>\n                                    <p>{{ review['textContent'] }}</p>\n                                    <p>{{ review['reviewDate'] }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </Transition>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ProductDetails',\n    props: ['id'],\n    data() {\n        return {\n            reviews: [],\n            product: [],\n            allSentiments: [],\n            positiveSentiments: [],\n            negativeSentiments: [],\n            neutralSentiments: []\n        }\n    },\n    mounted() {\n        fetch('http://localhost:8000/api/products/' + this.id + '/')\n            .then(res => res.json())\n            .then(data => this.product = data)\n            .catch(err => console.log(err.message))\n\n        fetch('http://localhost:8000/api/analizeproductreviews/?product=' + this.id)\n            .then(res => res.json())\n            .then(data => {\n                data.forEach(element => {\n                    this.allSentiments.unshift(element)\n                    switch (element['overallSentiment']) {\n                        case \"Positive\":\n                            this.positiveSentiments.unshift(element)\n                            break;\n                        case \"Negative\":\n                            this.negativeSentiments.unshift(element)\n                            break;\n                        case \"Neutral\":\n                            this.neutralSentiments.unshift(element)\n                            break;\n                        default:\n                            break;\n                    }\n                    \n                });\n               \n            })\n            .catch(err => console.log(err.message))\n    },\n    methods: {\n        getReview(sentiment) {\n            this.reviews = []\n            for(var value in sentiment){\n                fetch('http://localhost:8000/api/reviews/' + sentiment[value]['reviewID']+'/')\n                .then(res => res.json())\n                .then(data => {\n                    this.reviews.unshift(data)\n                })\n                .catch(err => console.log(err.message))\n            }\n        }\n    }\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}